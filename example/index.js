// example/index.js
const { onMessage } = require('../src/messageHandler');
const { startListener, topics } = require('../src/messageService');

// startListener(topics.dataCollectRequest, onMessage);
// startListener(topics.dataCollectStatus, onMessage);
// startListener(topics.dataCollectResponse, onMessage);
// startListener(topics.dataCollectError, onMessage);
// startListener(topics.jobScheduleCreate, onMessage);
// startListener(topics.jobScheduleUpdate, onMessage);
// startListener(topics.jobStatus, onMessage);
// startListener(topics.jobProgress, onMessage);
// startListener(topics.dataProcessingStart, onMessage);
// startListener(topics.dataProcessingStatus, onMessage);
// startListener(topics.dataProcessingResult, onMessage);
// startListener(topics.dataStorage, onMessage);
// startListener(topics.dataAggregation, onMessage);
// startListener(topics.analysisRequest, onMessage);
// startListener(topics.analysisResult, onMessage);
// startListener(topics.analysisError, onMessage);
// startListener(topics.alerts, onMessage);
startListener(topics.logs, onMessage);
// startListener(topics.reports, onMessage);
// startListener(topics.dashboard, onMessage);

// const { sendAlert } = require("../src/senders/alertSender");
// const { sendAnalysisRequest } = require("../src/senders/analysisRequestSender");
// const { sendAnalysisResult } = require("../src/senders/analysisResultSender");
// const { sendDashboardUpdate } = require("../src/senders/dashboardSender");
// const { sendDataAggregation } = require("../src/senders/dataAggregationSender");
// const { sendDataCollectError } = require("../src/senders/dataCollectErrorSender");
// const { sendDataCollectRequest } = require("../src/senders/dataCollectRequestSender");
// const { sendDataCollectResponse } = require("../src/senders/dataCollectResponseSender");
// const { sendDataCollectStatus } = require("../src/senders/dataCollectStatusSender");
// const { sendDataProcessingStart, sendDataProcessingStatus, sendDataProcessingResult } = require("../src/senders/dataProcessingSender");
// const { sendDataStorage } = require("../src/senders/dataStorageSender");
// const { sendJobProgress } = require("../src/senders/jobProgressSender");
// const { sendJobScheduleCreate, sendJobScheduleUpdate } = require("../src/senders/jobScheduleSender");
// const { sendJobStatus } = require("../src/senders/jobStatusSender");
// const { sendLog } = require("../src/senders/logSender");
// const { sendReport } = require("../src/senders/reportSender");

// sendAlert("task-001", "warning", "System resource usage exceeded the threshold");
// const analysisParameters = { region: 'US', category: 'Technology' };
// sendAnalysisRequest("task-002", "trendAnalysis", analysisParameters);
// const analysis = { "AI in healthcare": 85, "Quantum Computing": 78 };
// sendAnalysisResult("task-003", "trendAnalysis", analysis);
// const stats = { "AI in healthcare": 15000, "Quantum Computing": 12000 };
// sendDashboardUpdate("task-004", stats);
// const aggregatedData = { "AI in healthcare": 35000, "Quantum Computing": 24000 };
// sendDataAggregation("job-001", "task-005", aggregatedData);
// sendDataCollectError("task-006", "404", "Data source not found");
// const dataCollectParameters = { source: "Google Trends", query: "Quantum Computing" };
// sendDataCollectRequest("task-007", "Google Trends", dataCollectParameters);
// const dataCollect = { "Quantum Computing": 12345 };
// sendDataCollectResponse("task-008", dataCollect);
// sendDataCollectStatus("task-009", "in-progress", "Data collection is running smoothly.");
// sendDataProcessingStart("job-003", "task-011");
// sendDataProcessingStatus("job-003", "task-011", "in-progress", "Processing data...");
// const dataProcessing = { trends: [{ trend: 'AI', score: 88 }] };
// sendDataProcessingResult("job-003", "task-011", dataProcessing);
// const dataStorage = { trend: "AI in healthcare", mentions: 15000 };
// sendDataStorage("job-004", "task-012", dataStorage);
// sendJobProgress("job-005", "task-013", 45, "Data collection is 45% complete.");
// const schedule = { startTime: "2024-11-14T10:00:00Z", frequency: "daily" };
// sendJobScheduleCreate("job-006", "task-014", schedule);
// const updatedSchedule = { startTime: "2024-11-15T10:00:00Z", frequency: "weekly" };
// sendJobScheduleUpdate("job-006", "task-014", updatedSchedule);
// sendJobStatus("job-007", "task-015", "completed", "Job has been completed successfully.");
// sendLog("task-016", "info", "Log message: Data collection started.");
// const reportData = { "trend": "AI in healthcare", "mentions": 15000 };
// sendReport("task-017", "trend-report", reportData);