{
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique identifier for the data collect request."
    },
    "service": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "number",
          "description": "Unique identifier for each service."
        },
        "status_type_id": {
          "type": "number",
          "description": "Status type of the service. Possible values: 1 - active, 2 - inactive, 3 - maintenance, 4 - under review, 5 - suspended."
        },
        "service_type_id": {
          "type": "number",
          "description": "Type of the service. Possible values: 1 - Web, 2 - API, 3 - FTP, 4 - DB, 5 - MQ, 6 - Stream, 7 - Batch."
        },
        "access_type_id": {
          "type": "number",
          "description": "Access type ID that refers to how the service is accessed. Possible values: 1 - API, 2 - RSS, 3 - HTML."
        },
        "fetch_frequency": {
          "type": "number",
          "description": "Frequency (in seconds) at which data is fetched from the external service."
        },
        "time_interval": {
          "type": "number",
          "description": "Interval (in seconds) between consecutive fetch operations. For real-time data, this may be set to 0."
        },
        "next_fetch": {
          "type": ["number", "null"],
          "description": "Timestamp for the next fetch operation, automatically calculated based on fetch_frequency."
        },
        "last_fetched": {
          "type": ["number", "null"],
          "description": "Timestamp for the last successful fetch operation."
        },
        "last_error_message": {
          "type": ["string", "null"],
          "description": "Stores the last error message encountered during the fetch operation. Helpful for debugging."
        },
        "access_method_id": {
          "type": "number",
          "description": "Indicates the method by which the service is accessed. Possible values: 1 - Free, 2 - Open Access, 3 - Subscription."
        },
        "data_format_id": {
          "type": "number",
          "description": "Specifies the data format. Possible values: 1 - JSON, 2 - XML, 3 - CSV, 4 - HTML."
        },
        "parameters": {
          "type": "object",
          "oneOf": [
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "The protocol used for fetching data (e.g., HTTP, HTTPS, FTP)."
                },
                "domain": {
                  "type": "string",
                  "description": "The domain or hostname of the service (e.g., example.com)."
                },
                "port": {
                  "type": "number",
                  "description": "The port number to connect to the service (e.g., 80 for HTTP, 443 for HTTPS)."
                },
                "path": {
                  "type": ["string", "null"],
                  "description": "The path to the resource on the service (e.g., /api/v1/data)."
                },
                "query_parameters": {
                  "type": "object",
                  "properties": {
                    "geo": {
                      "type": ["string", "null"],
                      "description": "Geographical filter for the data. E.g., 'US' for United States."
                    }
                  }
                },
                "request_method": {
                  "type": "string",
                  "description": "The HTTP method used for the request. E.g., GET, POST."
                },
                "rate_limit": {
                  "type": "number",
                  "description": "The maximum number of requests allowed per time window."
                },
                "rate_limit_window": {
                  "type": "number",
                  "description": "The duration (in seconds) of the rate limit window."
                },
                "timeout": {
                  "type": "number",
                  "description": "The timeout value in milliseconds for the request."
                },
                "retry_count": {
                  "type": "number",
                  "description": "Number of retry attempts in case of failure."
                },
                "cache_duration": {
                  "type": "number",
                  "description": "The duration for which the fetched data will be cached (in seconds)."
                },
                "cache_enabled": {
                  "type": "boolean",
                  "description": "Indicates if caching is enabled or not."
                },
                "max_connections": {
                  "type": "number",
                  "description": "The maximum number of concurrent connections allowed."
                },
                "api_key": {
                  "type": ["string", "null"],
                  "description": "The API key for accessing the service (if required)."
                },
                "logging_enabled": {
                  "type": "boolean",
                  "description": "Indicates if logging is enabled for the service."
                },
                "allowed_origins": {
                  "type": "string",
                  "description": "The allowed origins for CORS (Cross-Origin Resource Sharing)."
                },
                "error_handling": {
                  "type": "string",
                  "description": "Defines the error handling strategy (e.g., 'retry', 'abort')."
                },
                "authentication_required": {
                  "type": "boolean",
                  "description": "Indicates if authentication is required for accessing the service."
                },
                "authentication_details": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": ["string", "null"],
                      "description": "The type of authentication required (e.g., Basic, OAuth)."
                    },
                    "location": {
                      "type": ["string", "null"],
                      "description": "Where to place the authentication details (e.g., header, query parameter)."
                    },
                    "required": {
                      "type": ["boolean", "null"],
                      "description": "Indicates if authentication is required for this service."
                    }
                  }
                }
              },
              "required": ["protocol", "domain", "port", "request_method"],
              "additionalProperties": false,
              "description": "API Service specific parameters"
            },
            {
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Database connection username."
                },
                "password": {
                  "type": "string",
                  "description": "Database connection password."
                },
                "database_name": {
                  "type": "string",
                  "description": "The name of the database to connect to."
                },
                "host": {
                  "type": "string",
                  "description": "The host or IP address where the database is located."
                },
                "port": {
                  "type": "number",
                  "description": "The port number for database connection."
                },
                "schema": {
                  "type": "string",
                  "description": "The schema to use within the database."
                }
              },
              "required": [
                "username",
                "password",
                "database_name",
                "host",
                "port"
              ],
              "additionalProperties": false,
              "description": "Database Service specific parameters"
            },
            {
              "properties": {
                "rss_feed_url": {
                  "type": "string",
                  "description": "The URL of the RSS feed."
                },
                "refresh_interval": {
                  "type": "number",
                  "description": "The refresh interval for the RSS feed, in seconds."
                }
              },
              "required": ["rss_feed_url"],
              "additionalProperties": false,
              "description": "RSS Service specific parameters"
            }
          ]
        }
      },
      "required": ["service_id", "service_type_id"],
      "additionalProperties": false
    }
  },
  "required": ["id", "service"],
  "additionalProperties": false
}
